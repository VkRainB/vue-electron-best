name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
      fail-fast: false

    permissions:
      contents: write

    timeout-minutes: 60
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies (npm)
        run: npm install --ignore-scripts --no-audit --no-fund

      - name: Postinstall electron builder deps
        run: npx electron-builder install-app-deps

      # MacOS Build
      - name: Build MacOS
        if: matrix.os == 'macos-latest'
        run: |
          export ELECTRON_BUILDER_EXTRA_ARGS="--universal --publish=never"
          npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          DEBUG: electron-builder

      # Windows Build
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_EXTRA_ARGS: --publish=never

      # Linux Build
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
          npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_EXTRA_ARGS: --publish=never

      # Get version from tag
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        shell: bash

      # Read release notes from tag message
      - name: Read release notes
        id: release_notes
        run: |
          NOTES=$(git tag -l --format='%(contents)' v${{ env.VERSION }})
          echo "NOTES<<EOF" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      # Upload artifacts
      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/*.dmg
            build/*.exe
            build/*.deb
            build/*.rpm
            build/*.AppImage
            build/latest*.yml
            build/*.blockmap
          body: ${{ env.NOTES }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
